// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	backend "github.com/GlintPay/gccs/backend"
	mock "github.com/stretchr/testify/mock"
)

// FileIterator is an autogenerated mock type for the FileIterator type
type FileIterator struct {
	mock.Mock
}

// ForEach provides a mock function with given fields: f
func (_m *FileIterator) ForEach(f func(backend.File) error) error {
	ret := _m.Called(f)

	var r0 error
	if rf, ok := ret.Get(0).(func(func(backend.File) error) error); ok {
		r0 = rf(f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFileIterator interface {
	mock.TestingT
	Cleanup(func())
}

// NewFileIterator creates a new instance of FileIterator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFileIterator(t mockConstructorTestingTNewFileIterator) *FileIterator {
	mock := &FileIterator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
